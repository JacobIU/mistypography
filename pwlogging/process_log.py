__author__ = "Rahul Chatterjee (rahul@cs.cornell.edu)"
"""
Process the logfile generated by pwlogging.py
"""

import os, sys, json, re
from checker import BUILT_IN_CHECKERS
from collections import defaultdict

"""
INFO:__main__:  Received from address=('127.0.0.1', 35727), data={u'isValid': 0, u'password': u'qqwerty', u'uid': u'rahulc', u'useragent': u'User-Agent'} at time=1448235356.37
INFO:__main__:  WHOCANFIX: time=1448235356.37, uid=rahulc, user-agent=User-Agent, correct=2, checkers=['ChkAllTop5', 'ChkAll_rmfirstc']

"""

REGEX_whocanfix = re.compile(r"^INFO:__main__:\s*WHOCANFIX: time=(?P<time>[\d\.]+), uid=(?P<uid>\w+), user-agent=(?P<useragent>.+), correct=(?P<iscorrect>\d+), checkers=(?P<checkers>.+)\s*$")

def process_logfile(fname):
    with open(fname) as logfile:
        for line in logfile:
            m = REGEX_whocanfix.match(line)
            if m:
                yield m.groupdict()


def compute_statistics(fname):
    num_correctable = 0
    total_pwsubmissions = 0
    checker_count = {k: 0 for k in BUILT_IN_CHECKERS}
    loginattempts = defaultdict(list)
    for stat in process_logfile(fname):
        total_entry += 1
        if stat['iscorrect'] == '2':   # Correctable
            num_correctable += 1
            checkers = eval(stat['checkers'])
            for chk in checkers:
                checker_count[chk] += 1  # If chk not in
        # checker_count, there is some error TODO: make following
        # calculation online, currently it is storing all uid data and
        # then computing the login time stats. 

        loginattempts[stat['uid']].append((stat['time'], checkers))
    
    print "Fraction of correctable passwords:"
    for k, v in checker_count.items():
        print "{}: {.3f}".format(k, v/float(total_entry))
    
